import numpy as np
import copy
import matplotlib.pyplot as plt

"""
Input:
    n: Number of random numbers generated by Unif(0,1) distribution.
    m: Base, that is used in Random Number Generation (RNG).
    a: Multiplier, that is used in RNG.
    x0: Seed of RNG.
Output:
    Y: A length-n vector, generated psuedo-random numbers.
"""
def unif_gen(n, m, a, x0):
    Y = []
    xo = x0
    for i in range(n):
        xn = np.mod(a * xo, m)
        Y.append(xn)
        xo = copy.deepcopy(xn)
    Y = np.array(Y) / m
    return Y

"""
Input:
    n: Number of Weibull(a,b) random samples.
    a: Parameter 1 of Weibull distribution.
    b: Parameter 2 of Weibull distribution.
Output:
    Y: A length-n vector, generated psuedo-random numbers.
"""
def weibull_gen(n, a, b):
    U = np.random.random(n)
    Y = (1/a * np.log(1/U))**(1/b)
    return Y

x0 = 100
Y1 = unif_gen(500, 2**13-1, 17, x0)
Y2 = unif_gen(500, 2**13-1, 85, x0)
## Hist 1
plt.figure()
plt.hist(Y1)
plt.title('Histogram of samples with m = 2^{13}-1, a = 17')
plt.savefig("p1_hist_py.png")
## Plot 1
plt.figure()
plt.scatter(Y1[:-1], Y1[1:])
plt.title('Plot of (Y_i, Y_{i+1}) with m = 2^{13}-1, a = 17')
plt.savefig("p1_plot_py.png")
## Hist 2
plt.figure()
plt.hist(Y2)
plt.title('Histogram of samples with m = 2^{13}-1, a = 85')
plt.show()
plt.savefig("p2_hist_py.png")
## Plot 2
plt.figure()
plt.scatter(Y2[:-1], Y2[1:])
plt.title('Plot of (Y_i, Y_{i+1}) with m = 2^{13}-1, a = 85')
plt.savefig("p2_plot_py.png")
## Hist 3
plt.figure()
np.random.seed(2019)
Yw = weibull_gen(1000, 1, 0.5)
plt.hist(Yw, bins = 100)
plt.title('Histogram of samples with Weibull(1, 0.5)')
plt.savefig("p3_hist_py.png")
